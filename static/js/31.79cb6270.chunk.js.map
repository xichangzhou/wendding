{"version":3,"sources":["pages/Home/index.tsx","utils/http.ts"],"names":["Home","isDesktopOrLaptop","useMediaQuery","query","isBigScreen","isTabletOrMobile","isTabletOrMobileDevice","isPortrait","isRetina","renderAmis","type","body","columns","title","name","config","text","legend","data","polar","center","tooltip","trigger","axisPointer","angleAxis","startAngle","radiusAxis","min","series","coordinateSystem","showSymbol","animationDuration","clickAction","actionType","dialog","tpl","api","target","submitOnInit","className","wrapWithPanel","mode","controls","label","value","maxDate","minDate","addOn","level","actions","initFetch","notify","_type","msg","message","info","fetcher","console","log","http","apiAxios","url","method","withCredentials","cancelExecutor","cancelToken","axios","CancelToken","params"],"mappings":"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","file":"static/js/31.79cb6270.chunk.js","sourcesContent":["/* eslint-disable no-template-curly-in-string */\nimport React from \"react\";\nimport { render as renderAmis } from \"amis\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { message } from \"antd\";\nimport http from \"../../utils/http\";\n\n/**\n * https://github.com/contra/react-responsive\n */\nconst Home = () => {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-device-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 1224px)\",\n  });\n  const isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\n  const isRetina = useMediaQuery({ query: \"(min-resolution: 2dppx)\" });\n\n  return (\n    <div>\n      <h1>Device Test!</h1>\n      {isDesktopOrLaptop && (\n        <>\n          <p>You are a desktop or laptop</p>\n          {isBigScreen && <p>You also have a huge screen</p>}\n          {isTabletOrMobile && (\n            <p>You are sized like a tablet or mobile phone though</p>\n          )}\n        </>\n      )}\n      {isTabletOrMobileDevice && <p>You are a tablet or mobile phone</p>}\n      <p>Your are in {isPortrait ? \"portrait\" : \"landscape\"} orientation</p>\n      {isRetina && <p>You are retina</p>}\n      {/* <Editor\n        value={{ title: \"demo\", body: \"hello\" }}\n        onChange={() => {\n          console.log(\"\");\n        }}\n      /> */}\n      <div>\n        {renderAmis(\n          {\n            type: \"page\",\n            body: [\n              {\n                type: \"grid\",\n                columns: [\n                  {\n                    type: \"panel\",\n                    title: \"本地配置示例 支持交互\",\n                    name: \"chart-local\",\n                    body: [\n                      {\n                        type: \"chart\",\n                        config: {\n                          title: {\n                            text: \"极坐标双数值轴\",\n                          },\n                          legend: {\n                            data: [\"line\"],\n                          },\n                          polar: {\n                            center: [\"50%\", \"54%\"],\n                          },\n                          tooltip: {\n                            trigger: \"axis\",\n                            axisPointer: {\n                              type: \"cross\",\n                            },\n                          },\n                          angleAxis: {\n                            type: \"value\",\n                            startAngle: 0,\n                          },\n                          radiusAxis: {\n                            min: 0,\n                          },\n                          series: [\n                            {\n                              coordinateSystem: \"polar\",\n                              name: \"line\",\n                              type: \"line\",\n                              showSymbol: false,\n                              data: [\n                                [0, 0],\n                                [0.03487823687206265, 1],\n                                [0.06958655048003272, 2],\n                                [0.10395584540887964, 3],\n                                [0.13781867790849958, 4],\n                                [0.17101007166283433, 5],\n                                [0.2033683215379001, 6],\n                                [0.2347357813929454, 7],\n                                [0.26495963211660245, 8],\n                                [0.2938926261462365, 9],\n                                [0.3213938048432697, 10],\n                              ],\n                            },\n                          ],\n                          animationDuration: 2000,\n                        },\n                        clickAction: {\n                          actionType: \"dialog\",\n                          dialog: {\n                            title: \"详情\",\n                            body: [\n                              {\n                                type: \"tpl\",\n                                tpl: \"<span>当前选中值 ${value|json}<span>\",\n                              },\n                              {\n                                type: \"chart\",\n                                api:\n                                  \"https://houtai.baidu.com/api/mock2/chart/chart1\",\n                              },\n                            ],\n                          },\n                        },\n                      },\n                    ],\n                  },\n                  {\n                    type: \"panel\",\n                    title: \"远程图表示例(返回值带function)\",\n                    name: \"chart-remote\",\n                    body: [\n                      {\n                        type: \"chart\",\n                        api: \"https://houtai.baidu.com/api/mock2/chart/chart1\",\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                type: \"panel\",\n                title: \"Form+chart组合\",\n                body: [\n                  {\n                    type: \"form\",\n                    title: \"过滤条件\",\n                    target: \"chart1,chart2\",\n                    submitOnInit: true,\n                    className: \"m-b\",\n                    wrapWithPanel: false,\n                    mode: \"inline\",\n                    controls: [\n                      {\n                        type: \"date\",\n                        label: \"开始日期\",\n                        name: \"starttime\",\n                        value: \"-8days\",\n                        maxDate: \"${endtime}\",\n                      },\n                      {\n                        type: \"date\",\n                        label: \"结束日期\",\n                        name: \"endtime\",\n                        value: \"-1days\",\n                        minDate: \"${starttime}\",\n                      },\n                      {\n                        type: \"text\",\n                        label: \"条件\",\n                        name: \"name\",\n                        addOn: {\n                          type: \"submit\",\n                          label: \"搜索\",\n                          level: \"primary\",\n                        },\n                      },\n                    ],\n                    actions: [],\n                  },\n                  {\n                    type: \"divider\",\n                  },\n                  {\n                    type: \"grid\",\n                    className: \"m-t-lg\",\n                    columns: [\n                      {\n                        type: \"chart\",\n                        name: \"chart1\",\n                        initFetch: false,\n                        api:\n                          \"https://houtai.baidu.com/api/mock2/chart/chart?name=$name&starttime=${starttime}&endtime=${endtime}\",\n                      },\n                      {\n                        type: \"chart\",\n                        name: \"chart2\",\n                        initFetch: false,\n                        api:\n                          \"https://houtai.baidu.com/api/mock2/chart/chart2?name=$name\",\n                      },\n                    ],\n                  },\n                ],\n              },\n            ],\n          },\n          {},\n          {\n            notify: (_type: string, msg: string) => {\n              message.info(\"success\");\n            },\n            fetcher: (config: any) => {\n              console.log(config);\n\n              return (http as any)(config);\n            },\n          }\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// 自定义判断元素类型JS\n\n// const toType = (constant: any) => {\n//   let type = Object.prototype.toString.call(constant);\n\n//   type = type.slice(8).slice(0, type.slice(8).length - 1);\n\n//   return type;\n// };\n\n// 参数过滤函数\n// function filterNull(o: { [x: string]: any }) {\n//   Object.keys(o).map(key => {\n//     if (o[key] === null) {\n//       delete o[key];\n//     }\n//     if (toType(o[key]) === 'String') {\n//       o[key] = o[key].trim();\n//     } else if (toType(o[key]) === 'Object') {\n//       o[key] = filterNull(o[key]);\n//     } else if (toType(o[key]) === 'Array') {\n//       o[key] = filterNull(o[key]);\n//     }\n//   });\n//   return o;\n// }\n/*\n *url:请求的url\n *params:请求的参数\n *config:请求时的header信息\n *method:请求方法\n */\nfunction apiAxios({ url, data, config, method }: any) {\n  console.log('-------------------------');\n  console.log(url);\n  console.log(data);\n  console.log(config);\n  console.log(method);\n  console.log('-------------------------');\n\n  config = config || {};\n  config.withCredentials = true;\n\n  if (config.cancelExecutor) {\n    config.cancelToken = new (axios as any).CancelToken(config.cancelExecutor);\n  }\n\n  if (method === 'get' || method === 'delete' || method === 'patch') {\n    if (data) {\n      config.params = data;\n    }\n    return (axios as any)[method](url, config);\n  } else {\n    return (axios as any)[method](url, data, config);\n  }\n}\nexport default apiAxios;\n"],"sourceRoot":""}
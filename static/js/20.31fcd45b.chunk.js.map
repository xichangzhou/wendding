{"version":3,"sources":["pages/Bubblegum/index.tsx"],"names":["InitialData","id","name","issues","acceptIds","Issue","props","issueIndex","draggableId","index","provided","snapshot","ref","innerRef","className","isDragging","draggableProps","dragHandleProps","width","sx","p","borderRadius","boxShadow","src","style","height","px","as","fontSize","Column","columnIndex","activeColumn","column","length","droppableId","mode","isDropDisabled","includes","isDraggingOver","droppableProps","map","issue","key","placeholder","Home","useState","data","setData","setActiveColumn","onDragEnd","result","destination","source","fromColumnIndex","Number","fromIssueIndex","toColumnIndex","toIssueIndex","TempIssue","TempData","update","$splice","onDragStart"],"mappings":"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","file":"static/js/20.31fcd45b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n  DraggableProvided,\n  DraggableStateSnapshot,\n  DragUpdate,\n} from \"react-beautiful-dnd\";\nimport update from \"immutability-helper\";\nimport { Box, Card, Image, Heading, Text } from \"rebass\";\nimport \"./index.less\";\n\n/**\n * https://www.jianshu.com/p/a6cabb3c3147\n */\n\ninterface initialDataInterface {\n  id: number;\n  name: string;\n  issues: {\n    id: number;\n    name: string;\n  }[];\n  acceptIds: number[];\n}\n\ninterface ColumnProps {\n  columnIndex: number;\n  activeColumn: initialDataInterface | null;\n  column: initialDataInterface;\n}\n\ninterface IssueProps {\n  id: number;\n  issueIndex: number;\n  name: string;\n}\n\nconst InitialData: initialDataInterface[] = [\n  {\n    id: 100,\n    name: \"todo\",\n    issues: [\n      { id: 1, name: \"吃饭\" },\n      { id: 2, name: \"睡觉\" },\n      { id: 3, name: \"打豆豆\" },\n    ],\n    acceptIds: [200],\n  },\n  {\n    id: 200,\n    name: \"doing\",\n    issues: [\n      { id: 4, name: \"删库\" },\n      { id: 5, name: \"跑路\" },\n    ],\n    acceptIds: [300],\n  },\n  {\n    id: 300,\n    name: \"done\",\n    issues: [],\n    acceptIds: [100, 200],\n  },\n];\n\nconst Issue = (props: IssueProps) => {\n  const { id, issueIndex, name } = props;\n\n  return (\n    <Draggable draggableId={`${id}`} index={issueIndex}>\n      {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\n        <div\n          ref={provided.innerRef}\n          className={snapshot.isDragging ? \"issueDragging\" : \"issue\"}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Box width={280}>\n            <Card\n              sx={{\n                p: 1,\n                borderRadius: 2,\n                boxShadow: \"0 0 16px rgba(0, 0, 0, .25)\",\n              }}\n            >\n              <Image\n                src=\"https://www.youmeitu.com/Upload/20200217/1581931489919770.png\"\n                style={{ width: 280, height: 200 }}\n              />\n              <Box px={2}>\n                <Heading as=\"h3\">{name}</Heading>\n                <Text fontSize={0}>description</Text>\n              </Box>\n            </Card>\n          </Box>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst Column = (props: ColumnProps) => {\n  const { columnIndex, activeColumn, column } = props;\n  const { id, issues, name } = column;\n\n  return (\n    <div className=\"column\">\n      <div className=\"columnTitle\">\n        {name}({issues.length})\n      </div>\n      <Droppable\n        droppableId={`${columnIndex}`}\n        mode=\"virtual\"\n        isDropDisabled={\n          activeColumn\n            ? !(activeColumn.acceptIds.includes(id) || id === activeColumn.id)\n            : true\n        }\n      >\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            className={\n              snapshot.isDraggingOver ? \"columnContentActive\" : \"columnContent\"\n            }\n            {...provided.droppableProps}\n          >\n            {issues.map((issue, index) => (\n              <Issue\n                key={issue.id}\n                issueIndex={index}\n                id={issue.id}\n                name={issue.name}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n};\n\nconst Home = () => {\n  const [data, setData] = useState(InitialData);\n  const [activeColumn, setActiveColumn] = useState<initialDataInterface | null>(\n    null\n  );\n\n  const onDragStart = (result: DragUpdate) => {\n    const { source } = result;\n    const columnIndex = Number(source.droppableId);\n\n    setActiveColumn(data[columnIndex]);\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n\n    const fromColumnIndex = Number(source.droppableId);\n    const fromIssueIndex = source.index;\n    const toColumnIndex = Number(destination.droppableId);\n    const toIssueIndex = destination.index;\n\n    const TempIssue = data[fromColumnIndex].issues[fromIssueIndex];\n\n    let TempData = update(data, {\n      [fromColumnIndex]: {\n        issues: (issues) =>\n          update(issues, {\n            $splice: [[fromIssueIndex, 1]],\n          }),\n      },\n    });\n\n    TempData = update(TempData, {\n      [toColumnIndex]: {\n        issues: (issues) =>\n          update(issues, {\n            $splice: [[toIssueIndex, 0, TempIssue]],\n          }),\n      },\n    });\n\n    setData(TempData);\n    setActiveColumn(null);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\n      <div className=\"container\">\n        {data.map((column, index) => {\n          return (\n            <Column\n              columnIndex={index}\n              key={column.id}\n              activeColumn={activeColumn}\n              column={column}\n            />\n          );\n        })}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}
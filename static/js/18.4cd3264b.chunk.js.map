{"version":3,"sources":["../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","pages/Amis/index.tsx","utils/http.ts"],"names":["deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","Home","history","useHistory","renderAmis","title","remark","label","level","className","actionType","link","api","mode","defaultParams","filter","submitText","controls","name","placeholder","filterTogglable","headerToolbar","bulkActions","confirmText","dialog","switchPerPage","columnsCount","quickSaveApi","quickSaveItemApi","saveOrderApi","draggable","card","header","subTitle","subTitlePlaceholder","avatar","avatarClassName","actions","alert","confirm","isCancel","value","axios","notify","msg","toast","fetcher","config","log","http","copy","content","jumpTo","location","action","route","locations","split","length","pathname","state","id","apiAxios","url","data","method","withCredentials","cancelExecutor","cancelToken","CancelToken","params"],"mappings":"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","file":"static/js/18.4cd3264b.chunk.js","sourcesContent":["\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","/* eslint-disable no-template-curly-in-string */\nimport React from \"react\";\nimport { render as renderAmis } from \"amis\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport copy from \"copy-to-clipboard\";\nimport { alert, confirm } from \"amis/lib/components/Alert\";\nimport { toast } from \"amis/lib/components/Toast\";\nimport http from \"../../utils/http\";\n\nconst Home = () => {\n  const history = useHistory();\n  return (\n    <div>\n      {renderAmis(\n        {\n          type: \"page\",\n          title: \"页面配置增删改查示例\",\n          remark: \"增删改查\",\n          body: [\n            {\n              label: \"新增\",\n              type: \"button\",\n              level: \"primary\",\n              className: \"m-b-sm\",\n              actionType: \"link\",\n              link: \"add\",\n            },\n            {\n              type: \"crud\",\n              api: \"/api/test/list\",\n              mode: \"cards\",\n              defaultParams: {},\n              filter: {\n                title: \"条件搜索\",\n                submitText: \"搜索\",\n                controls: [\n                  {\n                    type: \"text\",\n                    name: \"name\",\n                    placeholder: \"通过姓名搜索\",\n                    // addOn: {\n                    //   label: \"搜索\",\n                    //   type: \"submit\",\n                    // },\n                  },\n                ],\n              },\n              filterTogglable: true,\n              headerToolbar: [\"bulkActions\", \"filter-toggler\"],\n              bulkActions: [\n                {\n                  label: \"批量删除\",\n                  actionType: \"ajax\",\n                  api: \"delete:https://houtai.baidu.com/api/sample/${ids|raw}\",\n                  confirmText: \"确定要批量删除?\",\n                },\n                {\n                  label: \"批量修改\",\n                  actionType: \"dialog\",\n                  dialog: {\n                    title: \"批量编辑\",\n                    name: \"sample-bulk-edit\",\n                    body: {\n                      type: \"form\",\n                      api: \"https://houtai.baidu.com/api/sample/bulkUpdate2\",\n                      controls: [\n                        {\n                          type: \"hidden\",\n                          name: \"ids\",\n                        },\n                        {\n                          type: \"text\",\n                          name: \"engine\",\n                          label: \"Engine\",\n                        },\n                      ],\n                    },\n                  },\n                },\n              ],\n              switchPerPage: true,\n              columnsCount: 4,\n              quickSaveApi: \"https://houtai.baidu.com/api/sample/bulkUpdate\",\n              quickSaveItemApi: \"https://houtai.baidu.com/api/sample/$id\",\n              saveOrderApi: \"/api/test/order\",\n              draggable: true,\n              card: {\n                header: {\n                  title: \"$engine\",\n                  subTitle: \"$platform\",\n                  subTitlePlaceholder: \"暂无说明\",\n                  avatar:\n                    '<%= data.avatar || \"https://internal-amis-res.cdn.bcebos.com/images/2019-12/1575350573496/4873dbfaf6a5.png\" %>',\n                  avatarClassName: \"pull-left thumb b-3x m-r\",\n                },\n                actions: [\n                  {\n                    type: \"button\",\n                    label: \"查看\",\n                    actionType: \"dialog\",\n                    dialog: {\n                      title: \"查看\",\n                      body: {\n                        type: \"form\",\n                        controls: [\n                          {\n                            type: \"static\",\n                            name: \"name\",\n                            label: \"姓名\",\n                          },\n                          {\n                            type: \"divider\",\n                          },\n                          {\n                            type: \"static\",\n                            name: \"email\",\n                            label: \"邮箱\",\n                          },\n                          {\n                            type: \"divider\",\n                          },\n                          {\n                            type: \"static-json\",\n                            name: \"editorValue\",\n                            label: \"静态展示json\",\n                          },\n                        ],\n                      },\n                    },\n                  },\n                  {\n                    type: \"button\",\n                    label: \"预览\",\n                    level: \"info\",\n                    actionType: \"link\",\n                    link: \"preview?id=${id}\",\n                  },\n                  {\n                    type: \"button\",\n                    label: \"编辑\",\n                    level: \"info\",\n                    actionType: \"link\",\n                    link: \"info?id=${id}\",\n                  },\n                  {\n                    type: \"button\",\n                    label: \"删除\",\n                    actionType: \"ajax\",\n                    confirmText: \"您确认要删除?\",\n                    api: \"delete:/api/test/delete?id=${id}\",\n                  },\n                ],\n                body: [\n                  {\n                    name: \"name\",\n                    label: \"姓名\",\n                  },\n                  {\n                    name: \"email\",\n                    label: \"邮箱\",\n                  },\n                  {\n                    type: \"json\",\n                    name: \"editorValue\",\n                    label: \"页面配置\",\n                  },\n                ],\n              },\n            },\n          ],\n        },\n        {},\n        {\n          alert,\n          confirm,\n          isCancel: (value: any) => (axios as any).isCancel(value),\n          notify: (\n            type: \"error\" | \"success\" /**/,\n            msg: string /*提示内容*/\n          ) => {\n            toast[type]\n              ? toast[type](msg, type === \"error\" ? \"系统错误\" : \"系统消息\")\n              : console.warn(\"[Notify]\", type, msg);\n          },\n          fetcher: (config: any) => {\n            console.log(config);\n\n            return (http as any)(config);\n          },\n          copy: (content) => {\n            copy(content);\n            toast.success(\"内容已复制到粘贴板\");\n          },\n          jumpTo: (\n            location: string /*目标地址*/,\n            action: any /* action对象*/\n          ) => {\n            console.log(location);\n            const locations = location.split(\"?id=\");\n            let route;\n            if (locations.length > 1) {\n              route = {\n                pathname: history.location.pathname + \"/\" + locations[0],\n                state: {\n                  id: locations[1],\n                },\n              };\n            } else {\n              route = {\n                pathname: history.location.pathname + \"/\" + locations[0],\n              };\n            }\n            history.push(route);\n\n            // 因为不清楚所在环境中是否使用了 spa 模式，所以自己实现这个方法吧。\n          },\n        }\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// 自定义判断元素类型JS\n\n// const toType = (constant: any) => {\n//   let type = Object.prototype.toString.call(constant);\n\n//   type = type.slice(8).slice(0, type.slice(8).length - 1);\n\n//   return type;\n// };\n\n// 参数过滤函数\n// function filterNull(o: { [x: string]: any }) {\n//   Object.keys(o).map(key => {\n//     if (o[key] === null) {\n//       delete o[key];\n//     }\n//     if (toType(o[key]) === 'String') {\n//       o[key] = o[key].trim();\n//     } else if (toType(o[key]) === 'Object') {\n//       o[key] = filterNull(o[key]);\n//     } else if (toType(o[key]) === 'Array') {\n//       o[key] = filterNull(o[key]);\n//     }\n//   });\n//   return o;\n// }\n/*\n *url:请求的url\n *params:请求的参数\n *config:请求时的header信息\n *method:请求方法\n */\nfunction apiAxios({ url, data, config, method }: any) {\n  console.log('-------------------------');\n  console.log(url);\n  console.log(data);\n  console.log(config);\n  console.log(method);\n  console.log('-------------------------');\n\n  config = config || {};\n  config.withCredentials = true;\n\n  if (config.cancelExecutor) {\n    config.cancelToken = new (axios as any).CancelToken(config.cancelExecutor);\n  }\n\n  if (method === 'get' || method === 'delete' || method === 'patch') {\n    if (data) {\n      config.params = data;\n    }\n    return (axios as any)[method](url, config);\n  } else {\n    return (axios as any)[method](url, data, config);\n  }\n}\nexport default apiAxios;\n"],"sourceRoot":""}